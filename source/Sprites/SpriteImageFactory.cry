import Resources;

// TODO: put this in a separate file
class SpriteImageData {
	field Image;
	field OffsetX;
	field OffsetY;

	constructor(image, offsetX, offsetY) {
		this.Image = image;
		this.OffsetX = offsetX;
		this.OffsetY = offsetY;
	}
}

static class SpriteImageFactory {
	// Dictionary<string, SpriteImageData>
	static field images = {};

	static constructor() {
		lines = Resources.readText("Images/sprite_offsets.txt").split('\n');
		// TODO: C#-ism: this is an atlas
		//canvas = new Image("Images/sprites.png");
		
		for (line : lines) {
			trimmedLine = line.trim();
			if (trimmedLine.length > 0) {
				parts = trimmedLine.split('\t');
				id = parts[0];
				if (parts.length > 1) {
					offsets = parts[1].split(',');
					offsetX = parseInt(offsets[0]);
					offsetY = parseInt(offsets[1]);
				} else {
					offsetX = 0;
					offsetY = 0;
				}

				sprite = new Image('Images/sprites/' + id + '.png');
				SpriteImageFactory.images[id] = new SpriteImageData(sprite, offsetX, offsetY);
			}
		}
	}

	static function GetImage(id) {
		img = SpriteImageFactory.images.get(id);
		if (img != null) return img;
		throw new InvalidArgumentException("Image not found: " + id);
	}
}
