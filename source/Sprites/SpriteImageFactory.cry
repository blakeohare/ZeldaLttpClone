// TODO: put this in a separate file
class SpriteImageData
{
	field Image;
	field OffsetX;
	field OffsetY;

	constructor(image, offsetX, offsetY) {
		this.Image = image;
		this.OffsetX = offsetX;
		this.OffsetY = offsetY;
	}
}

class SpriteImageFactory {
	// Dictionary<string, SpriteImageData>
	field images = {};

	static constructor() {
		string[] lines = Resources.readTextResource("Data/sprite_manifest.txt").split('\n');
		// TODO: C#-ism: this is an atlas
		canvas = new Image("Images/sprites.png");
		sprite = null;

		for (line : lines) {
			trimmedLine = line.Trim();
			if (trimmedLine.length > 0) {
				parts = trimmedLine.split('\t');
				id = parts[0];
				location = parts[1].split(',');
				locX = parseInt(location[0]);
				locY = parseInt(location[1]);
				size = parts[2].split(',');
				width = parseInt(size[0]);
				height = parseInt(size[1]);

				if (parts.Length > 3) {
					offsets = parts[3].split(',');
					offsetX = parseInt(offsets[0]);
					offsetY = parseInt(offsets[1]);
				} else {
					offsetX = 0;
					offsetY = 0;
				}

				sprite = new Image(width, height);
				sprite.Blit(canvas, -locX, -locY);
				images.add(id, new SpriteImageData(sprite, offsetX, offsetY));
			}
		}
	}

	function GetImage(id)
	{
		img = images.get(id);
		if (img != null) return img;
		throw new InvalidArgumentException("Image not found: " + id);
	}
}
