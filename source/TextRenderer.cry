static class TextRenderer {
	static field overlayNumbers = {};

	static field cache = {};

	static constructor() {
		for (i = 0; i < 10; ++i) {
			overlayNumbers[i.ToString()] = new Image("Images/Text/Overlay/" + i.ToString() + ".png");
		}
	}

	// TODO: C#-ism: Replace the calling site with a simple call to draw directly to the canvas.
	static function GetOverlayNumber(number, digits) {
		key = "o_" + number + "_" + digits;
		output = TextRenderer.cache.get(key);
		if (output == null) {
			digitWidth = overlayNumbers["0"].Width + 1;
			width = digitWidth * digits;
			height = overlayNumbers["0"].Height;
			numAsString = "" + number;
			output = new Image(width, height);

			while (numAsString.length < digits) {
				numAsString = "0" + numAsString;
			}

			for (i = 0; i < numAsString.length; ++i) {
				output.Blit(overlayNumbers[numAsString[i].ToString()], i * digitWidth, 0);
			}

			cache[key] = output;
		}
		return output;
	}

	static function PurgeCache() {
		TextRenderer.cache.clear();
	}
}
